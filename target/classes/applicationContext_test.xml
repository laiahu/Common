<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/tx/spring-security-3.1.xsd
	http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd"
	default-autowire="byName">

    <!-- default-autowire="byName"，约定优于配置，约定优于配置 -->

	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/html/**" location="/html/" />
	<mvc:resources mapping="/dwz/**" location="/dwz/" />
	<mvc:resources mapping="/theme/**" location="/theme/" />
	<mvc:resources mapping="/themes/**" location="/themes/" />
	<mvc:resources mapping="/uploadify/**" location="/uploadify/" />
	<mvc:resources mapping="/xheditor/**" location="/xheditor/" />
	<mvc:resources mapping="/main/**" location="/main/" />

	<!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.mycompany.common.*.web" />

	<!-- 操作日志Aspectj 
	<aop:aspectj-autoproxy />
	<bean id="logAspect" class="com.mycompany.common.syst.log.LogAspect" />
	<aop:config>
		<aop:aspect ref="logAspect">
			<aop:pointcut id="logPointCut"
				expression="execution(* com.mycompany.common.*.web.*.*(..))" />
			<aop:around pointcut-ref="logPointCut" method="doSystemLog" />
		</aop:aspect>
	</aop:config>
	-->
	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="com.mycompany.common.secu.spring.SessionInterceptor"></bean>
			</list>
		</property>
	</bean>
-->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="webBindingInitializer">
			<bean class="com.mycompany.common.base.util.DmsWebBinding" />
		</property>
		<!-- 配置一下对json数据的转换 -->
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
			</list>
		</property>
	</bean>

	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀 InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<bean class="com.mycompany.common.base.util.DmsExceptionHandler" />
    
     <!-- 文件上传  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
		<!-- the maximum file size in bytes -->   
	    <property name="maxUploadSize" value="10000000"/>
	</bean>  
	
	<!--
	<context:component-scan base-package="com.mycompany.service.*impl" />

	
	// 模板文件夹路径
	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="classpath:mailTemplates"></property>
	</bean>
    -->
</beans>